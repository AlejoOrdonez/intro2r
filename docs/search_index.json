[
["graphics-in-r.html", "Chapter 4 Graphics in R", " Chapter 4 Graphics in R For many people, one of their favourite uses of R is in making figures. These can either take the form of a quick dirty plot to allow you to get a feel for what’s going on in your dataset, or fancier/more complex figures to use in a publication. This process is often as close as many analysts/scientists get to having a professional creative side (at least that’s true for me), and it’s something which those folk take great pride in. As stated in the introduction, one of the many reasons for the rise in the popularity of R is due to it’s ability to produce publication standard figures (as well as those quick and dirty figures - which are the type you and I and everyone else will produce most of). Not only can R users make figures well suited for publication, but producing figures in R allow lots of customisation, in turn allowing users to create their own particular styles and brands of figures (well beyond the beyond cookie-cutter styles in more traditional click and point programs). Because of this inherent flexibility with producing figures, the data visualisation side of R has grown substantially. We will focus on two ways to produce figures in R. The first will be base R figures and the second will be through using a package called ggplot. "],
["base-r-data-visualisation.html", "4.1 Base R data visualisation", " 4.1 Base R data visualisation Content to be added "],
["ggplot-data-visualisation.html", "4.2 ggplot data visualisation", " 4.2 ggplot data visualisation (Following might be removed eventually) Before we get going with making some plots of the gg variety, how about a quick little history of the most commonly used packages in R? ggplot2 was based on a book called Grammar of Graphics (hence the gg in ggplot2) by Leland Wilkinson yours for only £100 or so. But before you spend £100 see here for an interesting summary of Wilkinson’s book. Briefly, Wilkinson’s idea (one of them anyway) in grammar of graphics was that figures can be broken down into consituent parts, such as layers (more on this later). While Wilkinson would eventually go on to become vice-president of SPSS, his (and his co-author’s) ideas would, never-the-less, make their way into R. In 2007 ggplot2was officially released by Hadley Wickham. By 2017 the package was said to have been downloaded 10,000,000 times. ggplot2 now has many secondary packages that use it either as a foundation for expanding on or for interfacing (some statistical packages now have accompanying ggplot2 interfaces for producing figures). It is important to note here that ggplot2 is not required to make “fancy” figures. If you’d prefer to ue base R then go ahead. Exactly equivalent figures are possible in base R. The difference betweenggplot2 and base is to do with how you get to the end product rather than any differences in the end product itself. This is, never-the-less, a common belief almost certainly due to the fact that making a moderately attractive figure is easier to do with ggplot2 as many decisions are made for the user, without you necessarily even knowing that a decision was ever made! With that in mind, let’s get started. 4.2.1 Quick scatterplots 4.2.1.1 Base R ## [1] &quot;speed&quot; &quot;dist&quot; 4.2.1.2 ggplot2 "]
]
