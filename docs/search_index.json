[
["index.html", "A Introduction to R Preface", " A Introduction to R Alex Douglas November 29, 2019 Preface The purpose of this book is to introduce you to using R, a powerful and flexible interactive environment for statistical computing and research. R in itself is not difficult to learn, but as with learning any new language (spoken or computer) the initial learning curve can be a little steep and somewhat daunting. I have tried to simplify the content of this book as much as possible and have based it on my own personal experience of teaching (and learning) R over the last 15 years. It is not intended to cover everything there is to know about R - that would be an impossible task. Neither is it intended to be an introductory statistics course, although you will be using some simple statistics to highlight some of R’s capabilities. The main aim of this book is to help you climb the initial learning curve and provide you with the basic skills and experience (and confidence!) to enable you to further your experience in using R. A few notes about this book. Although you can use this book as a standalone resource, I strongly recommend you use it in conjunction with the companion website. The course website contains a series of exercises which will help you practice writing R code and test your understanding of key concepts - you certainly won’t learn how to use R by watching other people do it (or reading a book about it!). The website also contains solutions for each of the exercises and a plethora of links to additional resources. A question I get asked fairly regularly is ‘what’s the best/easiest way to learn R?’. Unfortunately, I don’t have a ready answer to this question as everyone tends to learn R in their own way and at their own pace. Having said that, here are a few things to bear in mind that might help: Use R often and use it regularly - find any excuse to fire up R (or RStudio) and get coding to help build and maintain all important momentum. Learning R is not a memory test. One of the beauties of a scripting language is that you will always have your code to refer back to when you inevitably forget how to do something. You don’t need to know everything there is to know about R to use it productively. If you get stuck, Google it, it’s not cheating and writing a good search query is a skill in itself. Just make sure you check thoroughly that the code you find is doing what you want it to do. If you find yourself staring at code for hours trying to find out why it’s not working then walk away for a few minutes. I have lost count of the number of times I was able to spot my mistake almost immediately after returning from a short caffeine break. In R there are many ways to tackle a particular problem. If your code doesn’t look like someone else’s, but it does what you want it to do in a reasonable time and robustly then don’t worry about it - job done. Related to the previous point, remember R is just a tool to help you answer your interesting questions. Although it can be fun to immerse yourself in all things R, don’t lose sight of what’s important - your research question(s) and your data. No amount of skill using R will help if your data collection is fundamentaly flawed or your question vague. Recognise that there will be times when things will get a little tough or frustrating. Try to accept these periods as part of the natural process of learning how to use R (we’ve all been there) and remember, the time and energy you invest now will be more than payed back in the not too distant future. Finally, once you have finished working your way through this book, I encourage you to practice what you’ve learned using your own data. If you don’t have any data yet, then ask your colleagues / friends / family for some (I’m sure they will be delighted!) or follow one of the many excellent tutorials available on-line (see the course website for more details). My suggestion to you, is that while you are getting to grips with R, uninstall any other statistics software you have on your computer and only use R. This may seem a little extreme but will hopefully remove the temptation to ‘just do it quickly’ in a more familiar environment and consequently slow down your learning of R. Believe me, anything you can do in your existing statistics software package you can do in R - often more robustly and efficiently. Good luck and have don’t forget to have fun. This book is written in RMarkdown with bookdown. "],
["getting-started-with-r-and-rstudio.html", "Chapter 1 Getting started with R and RStudio", " Chapter 1 Getting started with R and RStudio R is not new, although it’s popularity has increased rapidly over the last 10 years or so (see here for an interesting take). R is 24 years old at the tiome of writing this book. It was originally created and developed by Ross Ihaka and Robert Gentleman during the 1990’s with the first stable version released in 2000. R is currently developed and maintained by the R Developement Core Team. R can be regarded as an implementation of the S language, which was developed at Bell Laboratories by Rick Becker, John Chambers and Allan Wilks in the 1970’s. R can be used both as a programming language and as a data analysis package which you can use to manipulate your data, perform calculations, conduct statistical analyses and display graphics. Some advantages of using R include R is open source and freely available. R is available for Windows, Mac and Linux operating systems. R has an extensive and coherent set of tools for statistical analysis. R has an extensive and highly flexible graphical facility capable of producing publication quality figures. R has an expanding set of freely available ‘packages’ of routines for special or unusual analyses. R has an extensive support network with numerous online and freely available documents. However, for those who haven’t used it before, R may seem rather daunting and complex. Whilst the initial learning curve is admittedly a little steep, R offers the user a degree of flexibility and control not usually available in other more traditional ‘point and click’ statistical software. Undoubtedly, the time invested in learning R now will be more than repaid at a later date. Most importantly, learning to use R will change the way you think about data analysis. As your analysis will be implemented using R code and R scripts you will always have a permanent and accurate record of your analytical approach which you can then make available to others to facilitate robust and reproducible research practices. "],
["installing-r-and-rstudio.html", "1.1 Installing R and RStudio", " 1.1 Installing R and RStudio Most people using this guide will be running R on a computer with a Windows operating system (for other operating systems see the next section or the R-project web site). R can be downloaded as a self-extracting file from the Comprehensive R Archive Network (CRAN) website Click on ‘Windows’, click on ‘base’ and then ‘Download R 3.6.1 for Windows’ (the version available whilst writing this guide). Double click on the downloaded R executable file and follow the on screen instructions. Full installation instructions can be found at the CRAN website. Although various contributed packages are now included with the standard R distribution, you may need to install other packages to perform particular analyses (see section 1.8 for details of how to do this). One of the great things about R is that it’s compatible with many operating systems. You can download the appropriate binary for MAC OSX here. On Bio-Linux, the good news is that R is already installed by default so there is no need to do anything! For other Linux distributions you can find installation instructions here and follow the ‘Download R for Linux’ hyperlink. First, log onto the University network using your usual username and password. Double click on the Life Science and Medicine folder on the Desktop, then the Biological Sciences folder and finally to the Zoology folder. Shortcuts to both R, and RStudio (more later) should be visible. Double click on either to start the program. "],
["the-r-console.html", "1.2 The R console", " 1.2 The R console In Windows, once you have started R you will see the standard graphical user interface (GUI). In other operating systems the layout will vary, but all the essential elements are similar. The GUI is rather spartan with a limited number of menu and toolbar commands. Figure 1.1: R console The GUI contains a menu bar and a tool bar where you can access commonly used commands. It also provides a console window where your commands will be typed at the command line prompt (&gt;). In addition, a graphics window will appear automatically when using any plotting function (see Section 4.0 for more information) and an R help window will appear when you ask for information about a particular command (see section 1.5). Don’t worry too much about the R GUI, you won’t be using it much as you’ll be using RStudio instead (see section 1.10). "],
["r-help-and-support.html", "1.3 R help and support", " 1.3 R help and support This guide is intended as a relatively brief introduction to R and as such you will soon be using functions and packages that go beyond this introductory text. Fortunately, one of the strengths of R is its comprehensive and easily accessible help system and a wealth of online resources where you can obtain further information. To access R’s built-in help facility to get specific information on any named function simply type in the R console at the command line prompt help(plot) Or alternatively ?plot The above example will display help for the function plot() in a separate R help window Figure 1.2: R help The first line of the help contains information such as the name of the function and the package where the function can be found. There are also other headings that provide more specific information such as Description: gives a brief description of the function. Usage: gives the name of the arguments associated with the function and possible default values (options). Arguments: provides more detail regarding each argument. Details: gives further details of the function. Value: if applicable, gives the type of object returned by the function or the operator. See Also: provides information on other help pages with similar or related content. Examples: gives some examples of using the function. You can also access examples at any time by using the example() function (i.e. example(plot)) Alternatively, you can use help(&quot;plot&quot;) This method has the advantage of allowing you to search for help on non-alphanumeric characters (i.e. {, [, *). If in doubt always use quotes. In order to search for help in R it is necessary to use the help.search() function. For example help.search(&quot;plot&quot;) Or equivalently ??plot gives the following Help files with alias or concept or title matching &#39;plot&#39; using regular expression matching: base-defunct(base) Defunct Functions in Base Package glm.diag.plots(boot) Diagnostics plots for generalized linear models jack.after.boot(boot) Jackknife-after-Bootstrap Plots lines.saddle.distn(boot) Add a Saddlepoint Approximation to a Plot plot.boot(boot) Plots of the Output of a Bootstrap Simulation av.plots(car) Added-Variable Plots ceres.plots(car) Ceres Plots cr.plots(car) Component+Residual (Partial Residual) Plots The name of each entry is given on the left with the corresponding package in parentheses. A short description of the function is provided on the right. In the above example, the second entry can be displayed by typing help(glm.diag.plots, package=&quot;boot&quot;) Help in html format can be called from within the console by typing help.start() This function launches your web browser and allows you to browse the help pages using hyperlinks. One particularly useful feature of html help is the ability to search the R help pages using keywords and also search individual packages (although you can also do this from the R console). Figure 1.3: html help An extremely useful function is RSiteSearch() which enables you to search for keywords and phrases in the R-Help mailing list and archives and also in R manuals, documentation and help pages. This function allows you to access the R-Project search engine directly from the console with the results displayed in your web browser Figure 1.4: RSitesearch help Another useful function is apropos(). This function can be used to list all functions containing a specified character string (word). For example apropos(&quot;help&quot;) lists all the functions with “help” in their name. "],
["other-sources-of-information.html", "1.4 Other sources of information", " 1.4 Other sources of information There are a large number of resources available online, many of which can be found on the R-Project homepage. These include a searchable RHelp archive, an R Wiki, R mailing lists (can be a bit scary but very useful!) and a variety of user-contributed documents. "],
["r-packages.html", "1.5 R packages", " 1.5 R packages The standard installation of R contains a library of many useful packages. Other packages can be downloaded from the CRAN website which currently hosts over 10000 packages used for various purposes. To install a particular package use: install.packages(&quot;name of package&quot;) or if you want to install more than one package : install.packages(c(&quot;package1&quot;, &quot;package2&quot;)) and to periodically update your packages use: update.packages() If you are unable to install packages directly, you can manually download each package as a compressed file (*.zip) and perform a local zip file installation using the menu option. Once you have installed a package, it can be loaded into R using the library() function. For example, to load the package nlme you should enter library(nlme) Be aware that loaded packages (other than those in the base installation) are not kept in the R workspace between R sessions. If you restart R you will need to reload any packages that you wish to use. "],
["some-r-basics.html", "Chapter 2 Some R Basics", " Chapter 2 Some R Basics content to follow "],
["data-in-r.html", "Chapter 3 Data in R", " Chapter 3 Data in R content to follow "],
["graphics-in-r.html", "Chapter 4 Graphics in R", " Chapter 4 Graphics in R content to follow "],
["simple-statistics-in-r.html", "Chapter 5 Simple Statistics in R", " Chapter 5 Simple Statistics in R content to follow "],
["programming-in-r.html", "Chapter 6 Programming in R", " Chapter 6 Programming in R content to follow "]
]
